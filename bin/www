var app = require("../index");
var debug = require("debug")("polines:server");
var http = require("http");

// Gunakan PORT dari environment Railway jika tersedia, fallback ke 3000
var port = normalizePort(process.env.PORT || "3000");
var hostname = "0.0.0.0";
app.set("port", port);

// Buat server HTTP
var server = http.createServer(app);

// Jalankan server
server.listen(port, hostname, () => {
  console.log(`✅ Server running at http://${hostname}:${port}/`);
});

server.on("error", onError);
server.on("listening", onListening);

// Fungsi untuk normalisasi port (angka atau named pipe)
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // Named pipe
    return val;
  }

  if (port >= 0) {
    // Port number
    return port;
  }

  return false;
}

// Handler jika server gagal start
function onError(error) {
  if (error.syscall !== "listen") {
    console.error("❌ Server Error:", error);
    process.exit(1); // Hindari throw, gunakan exit agar Railway tangkap error dengan benar
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // Handle error spesifik
  switch (error.code) {
    case "EACCES":
      console.error(`❌ ${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(`❌ ${bind} is already in use`);
      process.exit(1);
      break;
    default:
      console.error("❌ Unexpected error:", error);
      process.exit(1);
  }
}

// Logging saat server berhasil mendengarkan
function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("✅ Listening on " + bind);
}
